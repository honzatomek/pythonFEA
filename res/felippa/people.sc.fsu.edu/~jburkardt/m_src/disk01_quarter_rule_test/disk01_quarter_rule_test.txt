07-Jan-2022 19:05:06

DISK01_QUARTER_RULE_TEST():
  MATLAB/Octave version 9.8.0.1380330 (R2020a) Update 2
  Test DISK01_QUARTER_RULE().

DISK01_QUARTER_RULE
  MATLAB/Octave version 9.8.0.1380330 (R2020a) Update 2
  Determine a quadrature rule for the unit quarter disk.

  Seeking a rule using 3 points
  The degree of precision will be 2
  The number of degrees of freedom is 9
  The number of monomial integrals to match is 6

  Initial guess for W, X, Y values:

        0.261799        0.482963        0.353553
        0.261799        0.353553         0.12941
        0.261799         0.12941        0.482963
[Warning: Trust-region-dogleg algorithm of FSOLVE cannot handle non-square
systems; using Levenberg-Marquardt algorithm instead.] 
[> In fsolve (line 323)
  In disk01_quarter_rule (line 76)
  In disk01_quarter_rule_test (line 30)
  In run (line 91)] 

Equation solved.

fsolve completed because the vector of function values is near zero
as measured by the value of the function tolerance, and
the problem appears regular as measured by the gradient.


  FSOLVE solves for W, X, Y values:

        0.257968        0.574364        0.640783
        0.269462        0.640783       0.0484525
        0.257968       0.0484526        0.574364

  Residuals for WXY:

     3.22631e-13
    -8.01581e-13
    -8.01526e-13
     4.41092e-13
     9.15434e-13
     4.41175e-13

  Monomial       Estimate           Exact       Error

  x^0*y^0        0.785398        0.785398     3.22631e-13
  x^1*y^0        0.333333        0.333333     8.01581e-13
  x^0*y^1        0.333333        0.333333     8.01526e-13
  x^2*y^0         0.19635         0.19635     4.41092e-13
  x^1*y^1           0.125           0.125     9.15434e-13
  x^0*y^2         0.19635         0.19635     4.41175e-13

DISK01_QUARTER_RULE:
  Normal end of execution.

DISK01_QUARTER_RULE_TEST():
  Normal end of execution.

07-Jan-2022 19:05:07
