function [ n_data, n, x, fx ] = pn_polynomial_values ( n_data )

%*****************************************************************************80
%
%% pn_polynomial_values(): selected values of normalized Legendre polynomials Pn(n,x).
%
%  Licensing:
%
%    This code is distributed under the GNU LGPL license.
%
%  Modified:
%
%    17 March 2012
%
%  Author:
%
%    John Burkardt
%
%  Reference:
%
%    Milton Abramowitz and Irene Stegun,
%    Handbook of Mathematical Functions,
%    US Department of Commerce, 1964.
%
%    Stephen Wolfram,
%    The Mathematica Book,
%    Fourth Edition,
%    Wolfram Media / Cambridge University Press, 1999.
%
%  Input:
%
%    integer N_DATA.  The user sets N_DATA to 0 before the first call. 
%
%  Output:
%
%    integer N_DATA.  On each call, the routine increments N_DATA by 1, and
%    returns the corresponding data; when there is no more data, the
%    output value of N_DATA will be 0 again.
%
%    integer N, the order of the function.
%
%    real X, the point where the function is evaluated.
%
%    real FX, the value of the function.
%
  n_max = 22;

  fx_vec = [ ...
    0.7071067811865475, ...
    0.3061862178478972, ...
   -0.642337649721702, ...
   -0.6284815141846855, ...
    0.3345637065282053, ...
    0.7967179601799685, ...
    0.06189376866246124, ...
   -0.766588850921089, ...
   -0.4444760242953344, ...
    0.5450094674858101, ...
    0.7167706229835538, ...
    0.0000000000000000, ...
   -0.2759472322745781, ...
   -0.5238320341483518, ...
   -0.7155919752205163, ...
   -0.823164625090267, ...
   -0.8184875533567997, ...
   -0.6734983296193094, ...
   -0.360134523476992, ...
    0.1496662954709581, ...
    0.8839665576253438, ...
    1.870828693386971 ];

  n_vec = [ ...
     0,  1,  2, ...
     3,  4,  5, ...
     6,  7,  8, ...
     9, 10,  3, ...
     3,  3,  3, ...
     3,  3,  3, ...
     3,  3,  3, ...
     3 ];

  x_vec = [ ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.00E+00, ...
     0.10E+00, ...
     0.20E+00, ...
     0.30E+00, ...
     0.40E+00, ...
     0.50E+00, ...
     0.60E+00, ...
     0.70E+00, ...
     0.80E+00, ...
     0.90E+00, ...
     1.00E+00 ];

  if ( n_data < 0 )
    n_data = 0;
  end

  n_data = n_data + 1;

  if ( n_max < n_data )
    n_data = 0;
    n = 0;
    x = 0.0;
    fx = 0.0;
  else
    n = n_vec(n_data);
    x = x_vec(n_data);
    fx = fx_vec(n_data);
  end

  return
end
