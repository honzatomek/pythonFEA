function [ n_data, x, fx ] = bessel_k1_values ( n_data )

%*****************************************************************************80
%
%% bessel_k1_values() returns some values of the K1 Bessel function.
%
%  Discussion:
%
%    The modified Bessel functions In(Z) and Kn(Z) are solutions of
%    the differential equation
%
%      Z^2 W'' + Z * W' - ( Z^2 + N^2 ) * W = 0.
%
%    The modified Bessel function K1(Z) corresponds to N = 1.
%
%    In Mathematica, the function can be evaluated by:
%
%      BesselK[1,x]
%
%  Licensing:
%
%    This code is distributed under the GNU LGPL license.
%
%  Modified:
%
%    15 August 2004
%
%  Author:
%
%    John Burkardt
%
%  Reference:
%
%    Milton Abramowitz and Irene Stegun,
%    Handbook of Mathematical Functions,
%    US Department of Commerce, 1964.
%
%    Stephen Wolfram,
%    The Mathematica Book,
%    Fourth Edition,
%    Wolfram Media / Cambridge University Press, 1999.
%
%  Input:
%
%    integer N_DATA.  The user sets N_DATA to 0 before the first call.  
%    Thereafter, it should simply be the value returned by the previous call.
%
%  Output:
%
%    integer N_DATA.  On each call, the routine increments N_DATA by 1, and
%    returns the corresponding data; when there is no more data, the
%    output value of N_DATA will be 0 again.
%
%    real X, the argument of the function.
%
%    real FX, the value of the function.
%
  n_max = 20;

  fx_vec = [ ...
     0.9853844780870606E+01, ... 
     0.4775972543220472E+01, ... 
     0.2184354424732687E+01, ... 
     0.1302834939763502E+01, ... 
     0.8617816344721803E+00, ... 
     0.6019072301972346E+00, ... 
     0.4345923910607150E+00, ... 
     0.3208359022298758E+00, ... 
     0.2406339113576119E+00, ... 
     0.1826230998017470E+00, ... 
     0.1398658818165224E+00, ... 
     0.7389081634774706E-01, ... 
     0.4015643112819418E-01, ... 
     0.2223939292592383E-01, ... 
     0.1248349888726843E-01, ... 
     0.7078094908968090E-02, ... 
     0.4044613445452164E-02, ... 
     0.1343919717735509E-02, ... 
     0.1553692118050011E-03, ... 
     0.1864877345382558E-04 ];

  x_vec = [ ...
      0.1E+00, ... 
      0.2E+00, ... 
      0.4E+00, ... 
      0.6E+00, ... 
      0.8E+00, ... 
      1.0E+00, ... 
      1.2E+00, ... 
      1.4E+00, ... 
      1.6E+00, ... 
      1.8E+00, ... 
      2.0E+00, ... 
      2.5E+00, ... 
      3.0E+00, ... 
      3.5E+00, ... 
      4.0E+00, ... 
      4.5E+00, ... 
      5.0E+00, ... 
      6.0E+00, ... 
      8.0E+00, ... 
     10.0E+00  ];

  if ( n_data < 0 )
    n_data = 0;
  end

  n_data = n_data + 1;

  if ( n_max < n_data )
    n_data = 0;
    x = 0.0;
    fx = 0.0;
  else
    x = x_vec(n_data);
    fx = fx_vec(n_data);
  end

  return
end
