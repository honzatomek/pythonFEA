function [ n_data, x, y, f ] = arctan2_values ( n_data )

%*****************************************************************************80
%
%% arctan2_values(): arc tangent function of two arguments.
%
%  Discussion:
%
%    In Mathematica, the function can be evaluated by:
%
%      ArcTan[x,y]
%
%  Licensing:
%
%    This code is distributed under the GNU LGPL license.
%
%  Modified:
%
%    03 January 2019
%
%  Author:
%
%    John Burkardt
%
%  Reference:
%
%    Milton Abramowitz, Irene Stegun,
%    Handbook of Mathematical Functions,
%    National Bureau of Standards, 1964,
%    ISBN: 0-486-61272-4,
%    LC: QA47.A34.
%
%    Stephen Wolfram,
%    The Mathematica Book,
%    Fourth Edition,
%    Cambridge University Press, 1999,
%    ISBN: 0-521-64314-7,
%    LC: QA76.95.W65.
%
%  Input:
%
%    integer N_DATA.  The user sets N_DATA to 0 before the first call.  
%    Thereafter, it should simply be the value returned by the previous call.
%
%  Output:
%
%    integer N_DATA.  On each call, the routine increments N_DATA by 1, and
%    returns the corresponding data; when there is no more data, the
%    output value of N_DATA will be 0 again.
%
%    real X, Y, the arguments of the function.
%
%    real F, the value of the function.
%
  n_max = 19;

  f_vec = [ ...
   -1.5707963267948966192, ...
   -1.0471975511965977462, ...
   -0.52359877559829887308, ...
    0.00000000000000000000, ...
    0.52359877559829887308, ...
    1.0471975511965977462, ...
    1.5707963267948966192, ...
    2.0943951023931954923, ...
    2.6179938779914943654, ...
    3.1415926535897932385, ...
   -2.6179938779914943654, ...
   -2.0943951023931954923, ...
   -1.5707963267948966192, ...
   -1.0471975511965977462, ...
   -0.52359877559829887308, ...
    0.00000000000000000000, ...
    0.52359877559829887308, ...
    1.0471975511965977462, ...
    1.5707963267948966192 ];

  x_vec = [ ...
    0.00000000000000000000, ...
    0.50000000000000000000, ...
    0.86602540378443864676, ...
    1.00000000000000000000, ...
    0.86602540378443864676, ...
    0.50000000000000000000, ...
    0.00000000000000000000, ...
   -0.50000000000000000000, ...
   -0.86602540378443864676, ...
   -1.00000000000000000000, ...
   -0.86602540378443864676, ...
   -0.50000000000000000000, ...
    0.00000000000000000000, ...
    0.50000000000000000000, ...
    0.86602540378443864676, ...
    1.00000000000000000000, ...
    0.86602540378443864676, ...
    0.50000000000000000000, ...
    0.00000000000000000000 ];

  y_vec = [ ...
   -1.00000000000000000000, ...
   -0.86602540378443864676, ...
   -0.50000000000000000000, ...
    0.00000000000000000000, ...
    0.50000000000000000000, ...
    0.86602540378443864676, ...
    1.00000000000000000000, ...
    0.86602540378443864676, ...
    0.50000000000000000000, ...
    0.00000000000000000000, ...
   -0.50000000000000000000, ...
   -0.86602540378443864676, ...
   -1.00000000000000000000, ...
   -0.86602540378443864676, ...
   -0.50000000000000000000, ...
    0.00000000000000000000, ...
    0.50000000000000000000, ...
    0.86602540378443864676, ...
    1.00000000000000000000 ];

  if ( n_data < 0 )
    n_data = 0;
  end

  n_data = n_data + 1;

  if ( n_max < n_data )
    n_data = 0;
    x = 0.0;
    y = 0.0;
    f = 0.0;
  else
    x = x_vec(n_data);
    y = y_vec(n_data);
    f = f_vec(n_data);
  end

  return
end
