07-Jan-2022 21:58:00

jacobi_polynomial_test():
  MATLAB/Octave version 9.8.0.1380330 (R2020a) Update 2
  Test jacobi_polynomial().

jacobi_polynomial_test01():
  J_POLYNOMIAL_VALUES stores values of
  the Jacobi polynomials.
  J_POLYNOMIAL evaluates the polynomial.

                                    Tabulated                 Computed
     N     A     B        X           J(N,A,B,X)                    J(N,A,B,X)                     Error

     0  0.000000  1.000000  0.500000    1.0000000000000000e+00    1.0000000000000000e+00         0
     1  0.000000  1.000000  0.500000    2.5000000000000000e-01    2.5000000000000000e-01         0
     2  0.000000  1.000000  0.500000   -3.7500000000000000e-01   -3.7500000000000000e-01         0
     3  0.000000  1.000000  0.500000   -4.8437500000000000e-01   -4.8437500000000000e-01         0
     4  0.000000  1.000000  0.500000   -1.3281250000000000e-01   -1.3281250000000000e-01         0
     5  0.000000  1.000000  0.500000    2.7539062500000000e-01    2.7539062500000000e-01         0
     5  1.000000  1.000000  0.500000   -1.6406250000000000e-01   -1.6406250000000000e-01         0
     5  2.000000  1.000000  0.500000   -1.1748046875000000e+00   -1.1748046875000000e+00         0
     5  3.000000  1.000000  0.500000   -2.3613281250000000e+00   -2.3613281250000000e+00         0
     5  4.000000  1.000000  0.500000   -2.6162109375000000e+00   -2.6162109375000000e+00         0
     5  5.000000  1.000000  0.500000    1.1718750000000000e-01    1.1718750000000000e-01         0
     5  0.000000  2.000000  0.500000    4.2187500000000000e-01    4.2187500000000000e-01         0
     5  0.000000  3.000000  0.500000    5.0488281250000000e-01    5.0488281250000000e-01         0
     5  0.000000  4.000000  0.500000    5.0976562500000000e-01    5.0976562500000000e-01         0
     5  0.000000  5.000000  0.500000    4.3066406250000000e-01    4.3066406250000000e-01         0
     5  0.000000  1.000000  -1.000000   -6.0000000000000000e+00   -6.0000000000000000e+00         0
     5  0.000000  1.000000  -0.800000    3.8620000000000002e-02    3.8619999999999495e-02   5.1e-16
     5  0.000000  1.000000  -0.600000    8.1184000000000001e-01    8.1184000000000001e-01         0
     5  0.000000  1.000000  -0.400000    3.6659999999999998e-02    3.6660000000000220e-02  -2.2e-16
     5  0.000000  1.000000  -0.200000   -4.8512000000000000e-01   -4.8512000000000005e-01   5.6e-17
     5  0.000000  1.000000  0.000000   -3.1250000000000000e-01   -3.1250000000000000e-01         0
     5  0.000000  1.000000  0.200000    1.8912000000000001e-01    1.8912000000000004e-01  -2.8e-17
     5  0.000000  1.000000  0.400000    4.0233999999999998e-01    4.0233999999999998e-01         0
     5  0.000000  1.000000  0.600000    1.2160000000000001e-02    1.2160000000000028e-02  -2.8e-17
     5  0.000000  1.000000  0.800000   -4.3962000000000001e-01   -4.3961999999999996e-01  -5.6e-17
     5  0.000000  1.000000  1.000000    1.0000000000000000e+00    1.0000000000000000e+00         0

jacobi_polynomial_test02:
  J_POLYNOMIAL_ZEROS computes the zeros of J(n,a,b,x);
  Check by calling J_POLYNOMIAL there.

  Computed zeros for J(1,0.500000,0.500000,z):

     1:            0

  Evaluate J(1,0.500000,0.500000,z):

     1:            0

  Computed zeros for J(2,0.500000,0.500000,z):

     1:         -0.5
     2:          0.5

  Evaluate J(2,0.500000,0.500000,z):

     1: -2.96059e-16
     2: -2.96059e-16

  Computed zeros for J(3,0.500000,0.500000,z):

     1:    -0.707107
     2:  6.59195e-17
     3:     0.707107

  Evaluate J(3,0.500000,0.500000,z):

     1:  3.55271e-16
     2: -1.44199e-16
     3: -8.28967e-16

  Computed zeros for J(4,0.500000,0.500000,z):

     1:    -0.809017
     2:    -0.309017
     3:     0.309017
     4:     0.809017

  Evaluate J(4,0.500000,0.500000,z):

     1:  4.06024e-16
     2:  2.03012e-16
     3:  5.58284e-16
     4:  1.42109e-15

  Computed zeros for J(5,0.500000,0.500000,z):

     1:    -0.866025
     2:         -0.5
     3:  5.95249e-17
     4:          0.5
     5:     0.866025

  Evaluate J(5,0.500000,0.500000,z):

     1:  -3.0527e-15
     2: -5.78961e-16
     3:  1.61136e-16
     4:  5.78961e-16
     5:  2.31584e-15

  Computed zeros for J(1,1.000000,1.500000,z):

     1:     0.111111

  Evaluate J(1,1.000000,1.500000,z):

     1:            0

  Computed zeros for J(2,1.000000,1.500000,z):

     1:    -0.348215
     2:     0.502061

  Evaluate J(2,1.000000,1.500000,z):

     1: -1.75443e-16
     2: -3.50885e-16

  Computed zeros for J(3,1.000000,1.500000,z):

     1:    -0.578486
     2:    0.0708943
     3:     0.684062

  Evaluate J(3,1.000000,1.500000,z):

     1:  1.06002e-15
     2: -9.93766e-17
     3: -6.62511e-16

  Computed zeros for J(4,1.000000,1.500000,z):

     1:    -0.706793
     2:    -0.217417
     3:     0.332314
     4:     0.782371

  Evaluate J(4,1.000000,1.500000,z):

     1:            0
     2: -1.28605e-16
     3:  -2.5721e-16
     4: -1.28605e-15

  Computed zeros for J(5,1.000000,1.500000,z):

     1:    -0.784837
     2:    -0.409111
     3:    0.0520736
     4:     0.500669
     5:     0.841205

  Evaluate J(5,1.000000,1.500000,z):

     1: -2.88728e-16
     2: -1.15491e-15
     3:  8.12049e-17
     4:  7.21821e-17
     5: -1.87674e-15

  Computed zeros for J(1,2.000000,0.500000,z):

     1:    -0.333333

  Evaluate J(1,2.000000,0.500000,z):

     1:            0

  Computed zeros for J(2,2.000000,0.500000,z):

     1:    -0.645661
     2:     0.184123

  Evaluate J(2,2.000000,0.500000,z):

     1: -3.50885e-16
     2: -8.77213e-17

  Computed zeros for J(3,2.000000,0.500000,z):

     1:    -0.780044
     2:    -0.212793
     3:     0.463425

  Evaluate J(3,2.000000,0.500000,z):

     1: -3.97506e-16
     2:  1.65628e-16
     3:  1.85503e-15

  Computed zeros for J(4,2.000000,0.500000,z):

     1:    -0.850186
     2:    -0.444336
     3:    0.0995069
     4:     0.623586

  Evaluate J(4,2.000000,0.500000,z):

     1:   7.7163e-16
     2:  1.28605e-16
     3: -4.50118e-16
     4:   7.7163e-16

  Computed zeros for J(5,2.000000,0.500000,z):

     1:    -0.891404
     2:     -0.58871
     3:    -0.156285
     4:      0.31397
     5:     0.722429

  Evaluate J(5,2.000000,0.500000,z):

     1: -1.44364e-15
     2:  5.77457e-16
     3:  4.69184e-16
     4: -5.05275e-16
     5:  5.77457e-16

jacobi_polynomial_test03():
  J_QUADRATURE_RULE computes the quadrature rule
  associated with J(n,a,b,x);

      X            W

       1:      -0.810587    0.00620279
       2:      -0.550876     0.0619382
       3:      -0.230689      0.216462
       4:       0.113888      0.398821
       5:         0.4436      0.431011
       6:       0.720815      0.259969
       7:        0.91385     0.0622568

  Use the quadrature rule to estimate:

    Q = Integral (-1<x<+1) J(i,a,b,x) J(j,a,b,x) (1-x)^a (1+x)^b dx

   I   J      Q_Estimate         Q_Exact

   0   0         1.43666         1.43666
   0   1     3.33067e-16               0
   0   2     3.33067e-16               0
   0   3     1.11022e-16               0
   0   4     2.77556e-16               0
   0   5    -5.55112e-17               0
   1   1         1.54717         1.54717
   1   2     3.33067e-16               0
   1   3     7.21645e-16               0
   1   4    -1.94289e-16               0
   1   5     1.05471e-15               0
   2   2         1.45203         1.45203
   2   3    -2.22045e-16               0
   2   4      1.7486e-15               0
   2   5    -1.11022e-16               0
   3   3         1.32615         1.32615
   3   4    -2.22045e-16               0
   3   5     2.44249e-15               0
   4   4          1.2068          1.2068
   4   5     -9.4369e-16               0
   5   5         1.10154         1.10154

jacobi_polynomial_test04():
  J_DOUBLE_PRODUCT_INTEGRAL computes the weighted integral of
  J(i,a,b,x) * J(j,a,b,x);

  For this example, we use a = 1.000000, b = 2.500000

    Q = Integral (-1<x<+1) J(i,a,b,x) J(j,a,b,x) (1-x)^a (1+x)^b dx

   I   J      Q

   0   0         1.43666
   0   1               0
   0   2               0
   0   3               0
   0   4               0
   0   5               0
   1   1         1.54717
   1   2               0
   1   3               0
   1   4               0
   1   5               0
   2   2         1.45203
   2   3               0
   2   4               0
   2   5               0
   3   3         1.32615
   3   4               0
   3   5               0
   4   4          1.2068
   4   5               0
   5   5         1.10154

jacobi_polynomial_test():
  Normal end of execution.

07-Jan-2022 21:58:00
